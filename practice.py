import pandas as pd
import folium
import numpy as np
from folium import plugins
pd.set_option('display.max_rows',None)

a = ['가산디지털단지', '강남', '강변(동서울터미널)', '건대입구', '고속터미널', '공덕', '광명사거리', 
'광화문(세종문화회관)', '교대(법원.검찰청)', '구로디지털단지', '구의(광진구청)', '군자(능동)', '까치산', 
'낙성대', '남부터미널(예술의전당)', '노량진', '노원', '논현', '당산', '대림(구로구청)', '동대문', 
'동대문역사문화공원', '뚝섬', '문래', '문정', '미아사거리', '봉천', '사당', '삼성(무역센터)', 
'서울대입구(관악구청)', '서울역', '선릉', '성수', '수유(강북구청)', '시청', '신논현', '신당', '신대방', 
'신도림', '신림', '신사', '신촌', '쌍문', '압구정', '양재(서초구청)', '여의도', '역삼', '연신내', '영등포구청', 
'오목교(목동운동장앞)', '을지로3가', '을지로입구', '잠실(송파구청)', '종각', '종로3가', '종로5가', 
'창동', '천호(풍납토성)', '철산', '충무로', '학동', '합정', '혜화', '홍대입구', '화곡', '회현(남대문시장)'] 
#여유

b = ['가락시장', '가양', '강남구청', '강동', '경복궁(정부서울청사)', '공릉(서울과학기술대)', '광나루(장신대)',
'구파발', '국회의사당', '길음', '김포공항', '남구로', '남한산성입구(성남법원.검찰청)', '내방', '녹번', '답십리', 
'당고개', '동묘앞', '디지털미디어시티', '마들', '마포', '마포구청', '망원', '매봉', '면목', '명동', '목동', 
'미사', '미아(서울사이버대학)', '발산', '방배', '부천시청', '부평구청', '불광', '사가정', '상계', '상동', 
'상봉(시외버스터미널)', '상왕십리', '상일동', '새절(신사)', '서대문', '서초', '석계', '성신여대입구(돈암)', 
'수락산', '수서', '숙대입구(갈월)', '숭실대입구(살피재)', '신대방삼거리', '신설동', '신용산', '신정(은행정)', 
'신중동', '신풍', '아차산(어린이대공원후문)', '안국', '암사', '약수', '어린이대공원(세종대)', '여의나루', '염창', 
'왕십리', '우장산', '을지로4가', '응암', '이대', '이수', '잠실나루', '잠실새내', '장지', '장한평', 
'제기동', '중계', ' 천왕', '청담', '청량리(서울시립대입구)', '총신대입구(이수)', '충정로(경기대입구)', 
'태릉입구', '하계', '한성대입구(삼선교)', '홍제'] 
#보통

c = ['강동구청', '강일', '개롱', '개화', '개화산', '거여', '경찰병원', '고덕', '고려대(종암)', '공항시장', 
'광흥창(서강)', '구반포', '구산', '굴포천', '굽은다리(강동구민회관앞)', '금호', '길동', '까치울', '남성', 
'남태령', '노들', '녹사평(용산구청)', '단대오거리', '대청', '대치', '대흥(서강대앞)', '도곡', '도림천', 
'도봉산', '독립문', '독바위', '돌곶이', '동대입구', '동작(현충원)', '둔촌동', '등촌', '뚝섬유원지', '마곡', 
'마곡나루(서울식물원)', '마장', '마천', '먹골', '명일', '모란', '몽촌토성(평화의문)', '무악재', '반포', 
'방이', '방화', '버티고개', '보라매', '보문', '복정', '봉화산(서울의료원)', '부천종합운동장', '사평', '산성', 
'삼각지', '삼산체육관', '상도', '상수', '상월곡(한국과학기술연구원)', '샛강', '석촌', '선유도', '송정', '송파', 
'수진', '신금호', '신길', '신내', '신답', '신목동', '신반포', '신방화', '신정네거리', '신흥', '아현', 
'안암(고대병원앞)', '애오개', '양천구청', '양천향교', '양평', '역촌', '영등포시장', '오금', '옥수', 
'온수(성공회대입구)', '올림픽공원(한국체대)', '용답', '용두(동대문구청)', '용마산(용마폭포공원)', 
'월곡(동덕여대)', '월드컵경기장(성산)', '이촌(국립중앙박물관)', '이태원', '일원', '잠원', '장승배기', 
'장암', '종합운동장', '중곡', '중화', '증미', '증산(명지대앞)', '지축', '창신', '청구', '춘의', '하남검단산', 
'하남시청(덕풍·신장)', '하남풍산', '학여울', '한강진', '한양대', '행당', '화랑대(서울여대입구)', '효창공원앞', 
'흑석(중앙대입구)'] 
#혼잡

subway1 = pd.read_csv('subway1-position.csv')
subway2 = pd.read_csv('subway2-position.csv')
subway3 = pd.read_csv('subway3-position.csv')
subway4 = pd.read_csv('subway4-position.csv')
subway5 = pd.read_csv('subway5-position.csv')
subway6 = pd.read_csv('subway6-position.csv')
subway7 = pd.read_csv('subway7-position.csv')
subway8 = pd.read_csv('subway8-position.csv')
subway9 = pd.read_csv('subway9-position.csv')

subway=[subway1,subway2,subway3,subway4,subway5,subway6,subway7,subway8,subway9]

a_1 = []
a_1 = pd.DataFrame(a_1)
b_1 = []
b_1 = pd.DataFrame(b_1)
c_1 = []
c_1 = pd.DataFrame(c_1)

for j in subway:
    for k in range(len(j)): 
        for i in a:
            if j.loc[k][2] == i:
                a_1 = a_1.append(j.loc[k])
        for i in b:
            if j.loc[k][2] == i:
                b_1 = b_1.append(j.loc[k])
        for i in c:
            if j.loc[k][2] == i:
                c_1 = c_1.append(j.loc[k])

a_1 = a_1.drop_duplicates(['역명']) #열에서 중복 제거
b_1 = b_1.drop_duplicates(['역명'])
c_1 = c_1.drop_duplicates(['역명'])

a_1 = a_1.reset_index()
b_1 = b_1.reset_index()
c_1 = c_1.reset_index()

marker = folium.Map([37.55367349969494, 126.98141399999997],zoom_start = 12)

from folium.plugins import MarkerCluster
marker_cluster = MarkerCluster().add_to(marker)

for i in range(len(a_1)):
    folium.Marker([a_1.loc[i][4],a_1.loc[i][1]],
    icon = folium.Icon(color='green'),popup=a_1.loc[i][3]).add_to(marker_cluster)
for i in range(len(b_1)):
    folium.Marker([b_1.loc[i][4],b_1.loc[i][1]],
    icon = folium.Icon(color='blue'),popup=b_1.loc[i][3]).add_to(marker_cluster)
for i in range(len(c_1)):    
    folium.Marker([c_1.loc[i][4],c_1.loc[i][1]],
    icon = folium.Icon(color='red'),popup=c_1.loc[i][3]).add_to(marker_cluster)        

marker.save('map.html')